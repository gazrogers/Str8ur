package net.garethrogers.str8ur

import scala.collection.mutable.HashMap
import scala.collection.immutable.Queue

class HttpResponse(var code: Int, val headers: HashMap[String, Queue[String]], var body: String)

object HttpResponse:
  def emptyResponse(statusCode: Int) = HttpResponse(statusCode, HashMap[String, Queue[String]](), "")
  def continue                      = emptyResponse(100)
  def switchingProtocols            = emptyResponse(101)
  def processing                    = emptyResponse(102)
  def earlyHints                    = emptyResponse(103)
  def ok                            = emptyResponse(200)
  def created                       = emptyResponse(201)
  def accepted                      = emptyResponse(202)
  def nonAuthoritativeInformation   = emptyResponse(203)
  def noContent                     = emptyResponse(204)
  def resetContent                  = emptyResponse(205)
  def partialCOntent                = emptyResponse(206)
  def multiStatus                   = emptyResponse(207)
  def alreadyReported               = emptyResponse(208)
  def imUsed                        = emptyResponse(226)
  def multipleChoices               = emptyResponse(300)
  def movedPermanently              = emptyResponse(301)
  def found                         = emptyResponse(302)
  def seeOther                      = emptyResponse(303)
  def notModified                   = emptyResponse(304)
  def temporaryRedirect             = emptyResponse(307)
  def permanentRedirect             = emptyResponse(308)
  def badRequest                    = emptyResponse(400)
  def unauthorized                  = emptyResponse(401)
  def paymentRequired               = emptyResponse(402)
  def forbidden                     = emptyResponse(403)
  def notFound                      = emptyResponse(404)
  def methodNotAllowed              = emptyResponse(405)
  def notAcceptable                 = emptyResponse(406)
  def proxyAuthenticationRequired   = emptyResponse(407)
  def requestTimeout                = emptyResponse(408)
  def conflict                      = emptyResponse(409)
  def gone                          = emptyResponse(410)
  def lengthRequired                = emptyResponse(411)
  def preconditionFailed            = emptyResponse(412)
  def payloadTooLarge               = emptyResponse(413)
  def uriTooLong                    = emptyResponse(414)
  def unsupportedMediaType          = emptyResponse(415)
  def rangeNotSatisfiable           = emptyResponse(416)
  def expectationFailed             = emptyResponse(417)
  def imATeapot                     = emptyResponse(418)
  def misdirectedRequest            = emptyResponse(421)
  def unprocessableContent          = emptyResponse(422)
  def locked                        = emptyResponse(423)
  def failedDependency              = emptyResponse(424)
  def tooEarly                      = emptyResponse(425)
  def upgradeRequired               = emptyResponse(426)
  def preconditionRequired          = emptyResponse(428)
  def tooManyRequests               = emptyResponse(429)
  def requestHeaderFieldsTooLarge   = emptyResponse(431)
  def unavailableForLegalReasons    = emptyResponse(451)
  def internalServerError           = emptyResponse(500)
  def notImplemented                = emptyResponse(501)
  def badGateway                    = emptyResponse(502)
  def serviceUnavailable            = emptyResponse(503)
  def gatewayTimeout                = emptyResponse(504)
  def httpVersionNotSupported       = emptyResponse(505)
  def variantAlsoNegotiates         = emptyResponse(506)
  def insufficientStorage           = emptyResponse(507)
  def loopDetected                  = emptyResponse(508)
  def notExtended                   = emptyResponse(510)
  def networkAuthenticationRequired = emptyResponse(511)
